// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Tools
#include <Tools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6c7076dbe00e5ec5_5_addOnExitHook,"Tools","addOnExitHook",0xa6ad522e,"Tools.addOnExitHook","Tools.hx",5,0xa9666fa3)
HX_LOCAL_STACK_FRAME(_hx_pos_6c7076dbe00e5ec5_8_exit,"Tools","exit",0xa1a09671,"Tools.exit","Tools.hx",8,0xa9666fa3)
HX_LOCAL_STACK_FRAME(_hx_pos_6c7076dbe00e5ec5_2_boot,"Tools","boot",0x9f9e2385,"Tools.boot","Tools.hx",2,0xa9666fa3)

void Tools_obj::__construct() { }

Dynamic Tools_obj::__CreateEmpty() { return new Tools_obj; }

void *Tools_obj::_hx_vtable = 0;

Dynamic Tools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Tools_obj > _hx_result = new Tools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Tools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x43ebd73b;
}

::Array< ::Dynamic> Tools_obj::onExit;

void Tools_obj::addOnExitHook( ::Dynamic fn){
            	HX_STACKFRAME(&_hx_pos_6c7076dbe00e5ec5_5_addOnExitHook)
HXDLIN(   5)		::Tools_obj::onExit->push(fn);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tools_obj,addOnExitHook,(void))

void Tools_obj::exit(int exitCode){
            	HX_STACKFRAME(&_hx_pos_6c7076dbe00e5ec5_8_exit)
HXLINE(   9)		{
HXLINE(   9)			int _g = 0;
HXDLIN(   9)			::Array< ::Dynamic> _g1 = ::Tools_obj::onExit;
HXDLIN(   9)			while((_g < _g1->length)){
HXLINE(   9)				 ::Dynamic hook = _g1->__get(_g);
HXDLIN(   9)				_g = (_g + 1);
HXLINE(  10)				hook(exitCode);
            			}
            		}
HXLINE(  12)		::Sys_obj::exit(exitCode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tools_obj,exit,(void))


Tools_obj::Tools_obj()
{
}

bool Tools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onExit") ) { outValue = ( onExit ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"addOnExitHook") ) { outValue = addOnExitHook_dyn(); return true; }
	}
	return false;
}

bool Tools_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"onExit") ) { onExit=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Tools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Tools_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(void *) &Tools_obj::onExit,HX_("onExit",dd,ff,a7,e5)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Tools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Tools_obj::onExit,"onExit");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Tools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Tools_obj::onExit,"onExit");
};

#endif

::hx::Class Tools_obj::__mClass;

static ::String Tools_obj_sStaticFields[] = {
	HX_("onExit",dd,ff,a7,e5),
	HX_("addOnExitHook",e1,f3,d6,4c),
	HX_("exit",1e,f7,1d,43),
	::String(null())
};

void Tools_obj::__register()
{
	Tools_obj _hx_dummy;
	Tools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Tools",fb,01,5c,a7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Tools_obj::__GetStatic;
	__mClass->mSetStaticField = &Tools_obj::__SetStatic;
	__mClass->mMarkFunc = Tools_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Tools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Tools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Tools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Tools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Tools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Tools_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_6c7076dbe00e5ec5_2_boot)
HXDLIN(   2)		onExit = ::Array_obj< ::Dynamic>::__new(0);
            	}
}

