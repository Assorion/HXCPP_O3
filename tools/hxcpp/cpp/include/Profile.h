// Generated by Haxe 4.3.1
#ifndef INCLUDED_Profile
#define INCLUDED_Profile

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Entry)
HX_DECLARE_CLASS0(Profile)



class HXCPP_CLASS_ATTRIBUTES Profile_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Profile_obj OBJ_;
		Profile_obj();

	public:
		enum { _hx_ClassId = 0x122c35d5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Profile")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Profile"); }

		inline static ::hx::ObjectPtr< Profile_obj > __new() {
			::hx::ObjectPtr< Profile_obj > __this = new Profile_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Profile_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Profile_obj *__this = (Profile_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Profile_obj), false, "Profile"));
			*(void **)__this = Profile_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Profile_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Profile",09,71,9a,c0); }

		static void __boot();
		static bool valid;
		static Float t0;
		static  ::Entry root;
		static  ::Entry current;
		static  ::Entry currentParent;
		static ::Array< ::Dynamic> stack;
		static void start();
		static ::Dynamic start_dyn();

		static void enable();
		static ::Dynamic enable_dyn();

		static void setEntry(::String inName);
		static ::Dynamic setEntry_dyn();

		static void push(::String inName);
		static ::Dynamic push_dyn();

		static void pop();
		static ::Dynamic pop_dyn();

		static void dump(int inExitCode);
		static ::Dynamic dump_dyn();

		static Float now();
		static ::Dynamic now_dyn();

};


#endif /* INCLUDED_Profile */ 
