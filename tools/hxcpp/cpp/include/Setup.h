// Generated by Haxe 4.3.1
#ifndef INCLUDED_Setup
#define INCLUDED_Setup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Setup)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)



class HXCPP_CLASS_ATTRIBUTES Setup_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Setup_obj OBJ_;
		Setup_obj();

	public:
		enum { _hx_ClassId = 0x01a187b9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Setup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Setup"); }

		inline static ::hx::ObjectPtr< Setup_obj > __new() {
			::hx::ObjectPtr< Setup_obj > __this = new Setup_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Setup_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Setup_obj *__this = (Setup_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Setup_obj), false, "Setup"));
			*(void **)__this = Setup_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Setup_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Setup",5d,1e,5d,0d); }

		static ::String findAndroidNdkRoot( ::haxe::ds::StringMap defines,int inBaseVersion);
		static ::Dynamic findAndroidNdkRoot_dyn();

		static Float getNdkVersion(::String inDirName);
		static ::Dynamic getNdkVersion_dyn();

		static void initHXCPPConfig( ::haxe::ds::StringMap ioDefines);
		static ::Dynamic initHXCPPConfig_dyn();

		static void setupMingw( ::haxe::ds::StringMap ioDefines);
		static ::Dynamic setupMingw_dyn();

		static void setupEmscripten( ::haxe::ds::StringMap ioDefines);
		static ::Dynamic setupEmscripten_dyn();

		static bool isRaspberryPi();
		static ::Dynamic isRaspberryPi_dyn();

		static void startPdbServer();
		static ::Dynamic startPdbServer_dyn();

		static void setup(::String inWhat, ::haxe::ds::StringMap ioDefines);
		static ::Dynamic setup_dyn();

		static void setupAndroidNdk( ::haxe::ds::StringMap defines);
		static ::Dynamic setupAndroidNdk_dyn();

		static void globallySetThePlatform(::String root, ::haxe::ds::StringMap defines);
		static ::Dynamic globallySetThePlatform_dyn();

		static void setupBlackBerryNativeSDK( ::haxe::ds::StringMap ioDefines);
		static ::Dynamic setupBlackBerryNativeSDK_dyn();

		static void setupMSVC( ::haxe::ds::StringMap ioDefines,bool in64,bool inArm64,bool isWinRT);
		static ::Dynamic setupMSVC_dyn();

		static ::String toPath(::String inPath);
		static ::Dynamic toPath_dyn();

};


#endif /* INCLUDED_Setup */ 
