// Generated by Haxe 4.3.1
#ifndef INCLUDED_File
#define INCLUDED_File

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(File)
HX_DECLARE_CLASS0(FileGroup)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(sys,thread,Mutex)



class HXCPP_CLASS_ATTRIBUTES File_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef File_obj OBJ_;
		File_obj();

	public:
		enum { _hx_ClassId = 0x02e7f0c0 };

		void __construct(::String inName, ::FileGroup inGroup);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="File")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"File"); }
		static ::hx::ObjectPtr< File_obj > __new(::String inName, ::FileGroup inGroup);
		static ::hx::ObjectPtr< File_obj > __alloc(::hx::Ctx *_hx_ctx,::String inName, ::FileGroup inGroup);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~File_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("File",9c,fa,94,2e); }

		static void __boot();
		static  ::haxe::ds::StringMap mFileHashes;
		static  ::sys::thread::Mutex mDependMutex;
		static ::String getFileHash(::String inName, ::haxe::ds::StringMap localCache);
		static ::Dynamic getFileHash_dyn();

		::String mName;
		::String mDir;
		::String mDependHash;
		::Array< ::String > mDepends;
		::Array< ::String > mCompilerFlags;
		 ::FileGroup mGroup;
		::String mTags;
		::String mFilterOut;
		::String mEmbedName;
		::String mScramble;
		::String getCacheProject();
		::Dynamic getCacheProject_dyn();

		bool isNvcc();
		::Dynamic isNvcc_dyn();

		bool isResource();
		::Dynamic isResource_dyn();

		bool keep( ::haxe::ds::StringMap inDefines);
		::Dynamic keep_dyn();

		::String getTags();
		::Dynamic getTags_dyn();

		::String setTags(::String inTags);
		::Dynamic setTags_dyn();

		void computeDependHash( ::haxe::ds::StringMap localCache);
		::Dynamic computeDependHash_dyn();

		::String getDependString();
		::Dynamic getDependString_dyn();

		bool isOutOfDate(::String inObj, ::Dynamic dependDebug);
		::Dynamic isOutOfDate_dyn();

};


#endif /* INCLUDED_File */ 
