// Generated by Haxe 4.3.1
#ifndef INCLUDED__Compiler_FlagInfo
#define INCLUDED__Compiler_FlagInfo

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0056ef779a76f88c_10_new)
HX_DECLARE_CLASS1(_Compiler,FlagInfo)

namespace _Compiler{


class HXCPP_CLASS_ATTRIBUTES FlagInfo_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlagInfo_obj OBJ_;
		FlagInfo_obj();

	public:
		enum { _hx_ClassId = 0x54b48ef8 };

		void __construct(::String inFlag,::String inTag);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="_Compiler.FlagInfo")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"_Compiler.FlagInfo"); }

		inline static ::hx::ObjectPtr< FlagInfo_obj > __new(::String inFlag,::String inTag) {
			::hx::ObjectPtr< FlagInfo_obj > __this = new FlagInfo_obj();
			__this->__construct(inFlag,inTag);
			return __this;
		}

		inline static ::hx::ObjectPtr< FlagInfo_obj > __alloc(::hx::Ctx *_hx_ctx,::String inFlag,::String inTag) {
			FlagInfo_obj *__this = (FlagInfo_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlagInfo_obj), true, "_Compiler.FlagInfo"));
			*(void **)__this = FlagInfo_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0056ef779a76f88c_10_new)
HXLINE(  11)		( ( ::_Compiler::FlagInfo)(__this) )->flag = inFlag;
HXLINE(  12)		( ( ::_Compiler::FlagInfo)(__this) )->tag = inTag;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlagInfo_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlagInfo",5a,72,51,76); }

		::String flag;
		::String tag;
		void add(::Array< ::String > args,::Array< ::String > inFilter);
		::Dynamic add_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace _Compiler

#endif /* INCLUDED__Compiler_FlagInfo */ 
