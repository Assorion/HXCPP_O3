// Generated by Haxe 4.3.1
#ifndef INCLUDED_ProcessManager
#define INCLUDED_ProcessManager

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ProcessManager)



class HXCPP_CLASS_ATTRIBUTES ProcessManager_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ProcessManager_obj OBJ_;
		ProcessManager_obj();

	public:
		enum { _hx_ClassId = 0x5260ea9e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ProcessManager")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"ProcessManager"); }

		inline static ::hx::ObjectPtr< ProcessManager_obj > __new() {
			::hx::ObjectPtr< ProcessManager_obj > __this = new ProcessManager_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ProcessManager_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ProcessManager_obj *__this = (ProcessManager_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ProcessManager_obj), false, "ProcessManager"));
			*(void **)__this = ProcessManager_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ProcessManager_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ProcessManager",de,67,75,70); }

		static ::Array< ::String > dup(::Array< ::String > inArgs);
		static ::Dynamic dup_dyn();

		static ::String combineCommand(::String command,::Array< ::String > args);
		static ::Dynamic combineCommand_dyn();

		static ::String formatMessage(::String command,::Array< ::String > args,::hx::Null< bool >  colorize);
		static ::Dynamic formatMessage_dyn();

		static int runCommand(::String path,::String command,::Array< ::String > args,::hx::Null< bool >  print,::hx::Null< bool >  safeExecute,::hx::Null< bool >  ignoreErrors,::String inText);
		static ::Dynamic runCommand_dyn();

		static ::Array< ::String > readStderr(::String inCommand,::Array< ::String > inArgs);
		static ::Dynamic readStderr_dyn();

		static ::Array< ::String > readStdout(::String command,::Array< ::String > args);
		static ::Dynamic readStdout_dyn();

		static ::String runProcess(::String path,::String command,::Array< ::String > args,::hx::Null< bool >  waitForOutput,::hx::Null< bool >  print,::hx::Null< bool >  safeExecute,::hx::Null< bool >  ignoreErrors,::String text);
		static ::Dynamic runProcess_dyn();

		static ::String runProcessLine(::String path,::String command,::Array< ::String > args,::hx::Null< bool >  waitForOutput,::hx::Null< bool >  print,::hx::Null< bool >  safeExecute,::hx::Null< bool >  ignoreErrors);
		static ::Dynamic runProcessLine_dyn();

		static int _runCommand(::String path,::String command,::Array< ::String > args,::String inText);
		static ::Dynamic _runCommand_dyn();

		static ::String _runProcess(::String path,::String command,::Array< ::String > args,bool waitForOutput,bool ignoreErrors,::String inText);
		static ::Dynamic _runProcess_dyn();

		static int runProcessThreaded(::String command,::Array< ::String > args,::String inText);
		static ::Dynamic runProcessThreaded_dyn();

};


#endif /* INCLUDED_ProcessManager */ 
